# -*- coding:utf-8 -*-
#+STARTUP: shell-script-mode

[ ! -z $SHELLRC ] && return 2>&-
export SHELLRC=TRUE
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export EDITOR=$(which vim)

for dn in "$HOME/bin" "$HOME/.local/bin"; do
    [[ -d  $dn ]] && export PATH="${dn}:${PATH}"
done

if [ -f $HOME/bin/docker ]; then
    if pidof systemd; then
        systemctl --user start docker
        export DOCKER_HOST=unix://$XDG_RUNTIME_DIR/docker.sock
    fi
fi

alias ls="lsd"
alias grep="grep --color=auto"
alias ll="ls -l"
alias la="ls -la"
alias lh="ls -lh"
alias l="ls"
alias lc="ls --color=always"
alias c="cd"
alias m="man"
alias g="git"
alias e="echo"
alias md="mkdir"
alias less="less -F"
alias len="wc -l"

[ -d "$HOME/.texmf" ] && export TEXMFHOME="$HOME/.texmf"

export LESS=-R
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin bold
export LESS_TERMCAP_md=$'\E[1;36m'     # begin blink
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline

# User functions...

if which git > /dev/null ; then
    function ghome(){
        git rev-parse --show-toplevel
    }
    alias cgh='cd $(ghome)'
fi

function mcd(){
    mkdir $1 && cd $1
}

# load local settings.

[ -f "$HOME/.config/pythonstartup.py" ] && export PYTHONSTARTUP="$HOME/.config/pythonstartup.py"

export XAPIAN_CJK_NGRAM=1

CARGO_ROOT=$HOME/.cargo
[ -d $CARGO_ROOT ] && PATH="$CARGO_ROOT/bin:$PATH"

if which xsv > /dev/null && which xsel > /dev/null ; then
    function csvcp(){
        cat $1 | xsv fmt -t "\t" | xsel -b
    }
fi

[ -x $HOME/.anyenv/bin/anyenv ] &&\
     export PATH="$HOME/.anyenv/bin:$PATH" &&\
     eval "$(anyenv init -)" &&\
     which pipenv > /dev/null &&\
     alias pipmd="env PIPENV_VENV_IN_PROJECT=true pipenv install -d" &&\
     eval "$(pipenv --completion)"

[ -f "$HOME/.config/shellrc.local" ] && source "$HOME/.config/shellrc.local"
